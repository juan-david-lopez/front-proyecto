// types/membership.ts
export enum MembershipTypeName {
  BASIC = "BASIC",
  PREMIUM = "PREMIUM",
  ELITE = "ELITE",
  NONE = "NONE"   // 游녣 extra por si no hay membres칤a
}

export interface MembershipType {
  idMembershipType: number;
  name: MembershipTypeName;
  description: string;
  monthlyPrice: number;
  accessToAllLocation: boolean;
  groupClassesSessionsIncluded: number;
  personalTrainingIncluded: number;
  specializedClassesIncluded: boolean;
}

export interface MembershipTypeResponse extends MembershipType {}

// Para crear membres칤as
export interface CreateMembershipRequest {
  userId: number;
  membershipTypeId: number;
  mainLocationId: number;
  paymentIntentId: string;
}

/**
 * Estados posibles de una membres칤a
 */
export enum MembershipStatus {
  ACTIVE = "ACTIVE",           // Membres칤a activa y vigente
  INACTIVE = "INACTIVE",       // Sin membres칤a
  EXPIRED = "EXPIRED",         // Membres칤a vencida
  SUSPENDED = "SUSPENDED",     // Membres칤a suspendida temporalmente
  CANCELLED = "CANCELLED",     // Membres칤a cancelada
  PENDING = "PENDING"          // Pendiente de activaci칩n/pago
}

/**
 * Respuesta ligera para el estado de membres칤a (ej: para validaciones r치pidas).
 */
export interface MembershipStatusResponse {
  isActive: boolean;
  status: "ACTIVE" | "INACTIVE";
  membershipType: MembershipTypeName;
  expiryDate?: string; 
}

/**
 * Informaci칩n completa de la membres칤a (ej: para dashboard detallado).
 */
export interface MembershipInfo {
  id?: number;
  type?: MembershipType;     // objeto completo con detalles
  startDate?: string;        // inicio (ISO)
  endDate?: string;          // fin (ISO)
  status: MembershipStatus;
  statusMessage?: string;
  daysRemaining?: number;
  isActive: boolean;
  suspensionStartDate?: string;    // Fecha inicio de suspensi칩n
  suspensionEndDate?: string;      // Fecha fin de suspensi칩n
  suspensionReason?: string;       // Motivo de suspensi칩n
  cancellationDate?: string;       // Fecha de cancelaci칩n
  cancellationReason?: string;     // Motivo de cancelaci칩n
  autoRenewal?: boolean;           // Renovaci칩n autom치tica activa
  suspensionsUsed?: number;        // N칰mero de suspensiones usadas este a침o
}

/**
 * Respuesta del endpoint /memberships/details/{userId}
 * Maneja tanto usuarios CON membres칤a como usuarios SIN membres칤a
 */
export interface MembershipDetailsResponse {
  hasMembership: boolean;           // true = tiene membres칤a, false = no tiene membres칤a
  membershipId?: number;            // ID de la membres칤a (solo si hasMembership = true)
  userId: number;                   // ID del usuario
  membershipTypeName?: string;      // Tipo de membres칤a: BASIC, PREMIUM, ELITE
  locationId?: number;              // ID de la ubicaci칩n principal
  startDate?: string;               // Fecha de inicio (ISO)
  endDate?: string;                 // Fecha de vencimiento (ISO)
  status?: string;                  // Estado: ACTIVE, EXPIRED, SUSPENDED
  message: string;                  // Mensaje descriptivo del estado
  needsLocation: boolean;           // true = debe asignar ubicaci칩n antes de comprar
}

/**
 * Request para renovar membres칤a
 */
export interface RenewMembershipRequest {
  userId: number;
  membershipId: number;
  paymentIntentId: string;
  autoRenewal?: boolean;
}

/**
 * Request para suspender membres칤a
 */
export interface SuspendMembershipRequest {
  userId: number;
  membershipId: number;
  suspensionDays: number;        // D칤as de suspensi칩n (15-90)
  reason: string;                // Motivo de suspensi칩n
}

/**
 * Request para cancelar membres칤a
 */
export interface CancelMembershipRequest {
  userId: number;
  membershipId: number;
  reason: string;                // Motivo de cancelaci칩n
  feedback?: string;             // Comentarios adicionales
  requestRefund?: boolean;       // Solicitar reembolso
}

/**
 * Response para operaciones de gesti칩n
 */
export interface MembershipOperationResponse {
  success: boolean;
  message: string;
  membership?: MembershipInfo;
  error?: string;
}
